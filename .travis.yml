language: cpp
sudo: required
notifications:
  email: false

# Use Linux unless specified otherwise
os: linux
dist: xenial

matrix:
  include:

    ##########################################################################
    # GCC on Linux
    ##########################################################################

    - env: STDFLAGS="-std=c++17" COMPILER=g++-8 BUILD_TYPE=Debug CODE_COVERAGE=TRUE DOCS_GENERATION=FALSE
      addons: &gcc8
        apt:
          packages:
            - lcov
            - g++-8
          sources:
            - ubuntu-toolchain-r-test

    - env: STDFLAGS="-std=c++17" COMPILER=g++-8 BUILD_TYPE=Release CODE_COVERAGE=FALSE DOCS_GENERATION=FALSE
      addons: *gcc8

install:

  # Set the ${CXX} variable properly
  - export CXX=${COMPILER}
  - ${CXX} --version
  
  # Dependencies required by the CI are installed in ${TRAVIS_BUILD_DIR}/deps/
  - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
  - mkdir -p "${DEPS_DIR}"
  - cd "${DEPS_DIR}"

  # Travis machines have 2 cores
  - JOBS=2

  ############################################################################
  # Install a recent CMake (unless already installed on OS X)
  ############################################################################
  - CMAKE_VERSION=3.11.0
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      CMAKE_URL="https://cmake.org/files/v${CMAKE_VERSION%.[0-9]}/cmake-${CMAKE_VERSION}-Linux-x86_64.tar.gz"
      mkdir cmake && travis_retry wget --no-check-certificate -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake
      export PATH=${DEPS_DIR}/cmake/bin:${PATH}
    else
      brew install cmake || brew upgrade cmake
    fi
  - cmake --version
  - wget http://downloads.sourceforge.net/ltp/lcov-1.14.tar.gz
  - tar xf lcov-1.14.tar.gz
  - sudo make -C lcov-1.14/ install


before_script:
  - cd ${TRAVIS_BUILD_DIR}
  - cmake -H. -BBuild -DCMAKE_BUILD_TYPE=${BUILD_TYPE} -Wdev -DCODE_COVERAGE=${CODE_COVERAGE} -DDOCS_GENERATION=${DOCS_GENERATION}
  - cd Build

script:
  - make -j 2
  - ctest -V -j 2

after_success:
# Create lcov report
- lcov --gcov-tool /usr/bin/gcov-8 --capture --directory . --output-file coverage.info
- lcov --gcov-tool /usr/bin/gcov-8 --remove coverage.info '/usr/*' --output-file coverage.info # filter system-files
- lcov --gcov-tool /usr/bin/gcov-8 --list coverage.info # debug info
# Uploading report to CodeCov
- bash <(curl -s https://codecov.io/bash) -f coverage.info || echo "Codecov did not collect coverage reports"
